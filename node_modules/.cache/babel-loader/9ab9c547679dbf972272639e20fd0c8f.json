{"ast":null,"code":"var _jsxFileName = \"/home/murat/modanisa-case/todo-list-reactjs/src/components/TodoItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"../style/style.css\";\nimport Button from '../helpers/Button';\nimport { connect } from 'react-redux';\nimport { deleteTodo, updateTodo } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoItem(props) {\n  _s();\n\n  const [content, setContent] = useState(props.content);\n  const [editable, setEditable] = useState(false);\n  const [done, setDone] = useState(props.done);\n  const [doneImg, setDoneImg] = useState(\"https://i.pinimg.com/originals/d0/17/47/d01747c4285afa4e7a6e8656c9cd60cb.png\");\n  const [doneStyle, setDoneStyle] = useState({\n    \"textDecoration\": \"\"\n  });\n\n  function editableChange() {\n    editable ? setEditable(false) : setEditable(true);\n    editable ? props.updateTodo({\n      id: props.id,\n      content: content,\n      done: done\n    }) : console.log(\"false\");\n  }\n\n  function doneChange() {\n    done ? setDone(false) : setDone(true);\n    done ? props.updateTodo({\n      id: props.id,\n      content: content,\n      done: false\n    }) : props.updateTodo({\n      id: props.id,\n      content: content,\n      done: true\n    });\n  }\n\n  useEffect(() => {\n    done ? setDoneImg(\"https://uxwing.com/wp-content/themes/uxwing/download/48-checkmark-cross/done.png\") : setDoneImg(\"https://i.pinimg.com/originals/d0/17/47/d01747c4285afa4e7a6e8656c9cd60cb.png\");\n    done ? setDoneStyle({\n      \"textDecoration\": \"line-through\"\n    }) : setDoneStyle({\n      \"textDecoration\": \"\"\n    });\n  }, [done]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-border\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: doneImg,\n        height: \"14px\",\n        className: \"todo-image\",\n        onClick: () => doneChange(),\n        alt: \"done-button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"todo-input\",\n        placeholder: props.placeholder,\n        type: props.type,\n        disabled: !editable,\n        style: doneStyle,\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        image: \"https://uxwing.com/wp-content/themes/uxwing/download/03-editing-user-action/edit-round.png\",\n        onClick: () => editableChange()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        image: \"https://icon-library.com/images/img_275374_45338.png\",\n        onClick: () => props.deleteTodo(props.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoItem, \"lImUhInOxRlpHroyKX1odmEPaQ8=\");\n\n_c = TodoItem;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteTodo: id => dispatch(deleteTodo(id)),\n    updateTodo: body => dispatch(updateTodo(body))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(TodoItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["/home/murat/modanisa-case/todo-list-reactjs/src/components/TodoItem.js"],"names":["React","useEffect","useState","Button","connect","deleteTodo","updateTodo","TodoItem","props","content","setContent","editable","setEditable","done","setDone","doneImg","setDoneImg","doneStyle","setDoneStyle","editableChange","id","console","log","doneChange","placeholder","type","e","target","value","mapDispatchToProps","dispatch","body"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport \"../style/style.css\"\nimport Button from '../helpers/Button';\nimport { connect } from 'react-redux';\nimport { deleteTodo, updateTodo } from '../api';\n\nfunction TodoItem(props) {\n    const [content, setContent] = useState(props.content)\n    const [editable, setEditable] = useState(false)\n    const [done, setDone] = useState(props.done)\n    const [doneImg, setDoneImg] = useState(\"https://i.pinimg.com/originals/d0/17/47/d01747c4285afa4e7a6e8656c9cd60cb.png\")\n    const [doneStyle, setDoneStyle] = useState({ \"textDecoration\": \"\" })\n\n\n    function editableChange() {\n        editable ? setEditable(false) : setEditable(true);\n        editable ? props.updateTodo({ id: props.id, content: content, done: done }) : console.log(\"false\");\n    }\n\n    function doneChange() {\n        done ? setDone(false) : setDone(true);        \n        done ? props.updateTodo({ id: props.id, content: content, done: false }) : props.updateTodo({ id: props.id, content: content, done: true });\n    }\n\n\n    useEffect(() => {\n        done ? setDoneImg(\"https://uxwing.com/wp-content/themes/uxwing/download/48-checkmark-cross/done.png\") : setDoneImg(\"https://i.pinimg.com/originals/d0/17/47/d01747c4285afa4e7a6e8656c9cd60cb.png\");\n        done ? setDoneStyle({ \"textDecoration\": \"line-through\" }) : setDoneStyle({ \"textDecoration\": \"\" });\n    }, [done]);\n\n    return (\n\n        <div className=\"todo-wrap\">\n            <div className=\"todo-border\">\n                <img src={doneImg} height=\"14px\" className=\"todo-image\" onClick={() => doneChange()} alt=\"done-button\" />\n                <input className=\"todo-input\" placeholder={props.placeholder} type={props.type} disabled={!editable} style={doneStyle} value={content} onChange={(e) => setContent(e.target.value)} />\n                <Button\n                    image=\"https://uxwing.com/wp-content/themes/uxwing/download/03-editing-user-action/edit-round.png\"\n                    onClick={() => editableChange()}\n                />\n                <Button\n                    image=\"https://icon-library.com/images/img_275374_45338.png\"\n                    onClick={() => props.deleteTodo(props.id)}\n                />\n            </div>\n\n        </div>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        deleteTodo: (id) => dispatch(deleteTodo(id)),\n        updateTodo: (body) => dispatch(updateTodo(body))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(TodoItem);"]},"metadata":{},"sourceType":"module"}