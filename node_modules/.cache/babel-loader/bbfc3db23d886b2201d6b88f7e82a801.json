{"ast":null,"code":"var _jsxFileName = \"/home/murat/modanisa-case/todo-list-reactjs/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport TodoItem from \"./TodoItem\";\nimport \"../style/style.css\";\nimport { connect } from \"react-redux\";\nimport React, { useEffect } from \"react\";\nimport { fetchTodolist } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList(props) {\n  _s();\n\n  useEffect(() => {\n    props.fetchTodolist();\n  }, []);\n  return props.loading ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 26\n  }, this) : props.error ? /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: props.error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 13\n  }, this) : props.todolist ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.todolist.map((item, index) => /*#__PURE__*/_jsxDEV(TodoItem, {\n      content: item.content,\n      done: item.done,\n      id: item.ID\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this)), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 30\n  }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Your list is empty\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 13\n  }, this);\n}\n\n_s(TodoList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = TodoList;\n\nconst mapStateToProps = state => {\n  return {\n    todolist: state.todolist,\n    loading: state.loading,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTodolist: () => dispatch(fetchTodolist())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/murat/modanisa-case/todo-list-reactjs/src/components/TodoList.js"],"names":["TodoItem","connect","React","useEffect","fetchTodolist","TodoList","props","loading","error","todolist","map","item","index","content","done","ID","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAO,oBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,QAA9B;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrBH,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,KAAK,CAACF,aAAN;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,SACIE,KAAK,CAACC,OAAN,gBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjB,GAAqCD,KAAK,CAACE,KAAN,gBACjC;AAAA,cAAKF,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,UADiC,GAEjCF,KAAK,CAACG,QAAN,gBAAiB;AAAA,eACjBH,KAAK,CAACG,QAAN,CAAeC,GAAf,CAAmB,CAACC,IAAD,EAAOC,KAAP,kBACf,QAAC,QAAD;AAEI,MAAA,OAAO,EAAED,IAAI,CAACE,OAFlB;AAGI,MAAA,IAAI,EAAEF,IAAI,CAACG,IAHf;AAII,MAAA,EAAE,EAAEH,IAAI,CAACI;AAJb,OACSH,KADT;AAAA;AAAA;AAAA;AAAA,YADJ,CADiB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAjB,gBASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAZR;AAiBH;;GAtBQP,Q;;KAAAA,Q;;AAyBT,MAAMW,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHR,IAAAA,QAAQ,EAAEQ,KAAK,CAACR,QADb;AAEHF,IAAAA,OAAO,EAAEU,KAAK,CAACV,OAFZ;AAGHC,IAAAA,KAAK,EAAES,KAAK,CAACT;AAHV,GAAP;AAKH,CAND;;AASA,MAAMU,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHf,IAAAA,aAAa,EAAE,MAAMe,QAAQ,CAACf,aAAa,EAAd;AAD1B,GAAP;AAGH,CAJD;;AAMA,eAAeH,OAAO,CAACe,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cb,QAA7C,CAAf","sourcesContent":["import TodoItem from \"./TodoItem\";\nimport \"../style/style.css\"\nimport { connect } from \"react-redux\";\nimport React, { useEffect } from \"react\";\nimport { fetchTodolist } from \"../api\";\n\nfunction TodoList(props) {\n    useEffect(() => {\n        props.fetchTodolist()\n    }, [])\n\n    return (\n        props.loading ? (<h2>Loading</h2>) : props.error ? (\n            <h2>{props.error}</h2>\n        ) : props.todolist ? <div>{\n            props.todolist.map((item, index) => (\n                <TodoItem\n                    key={index}\n                    content={item.content}\n                    done={item.done}\n                    id={item.ID}\n                />\n            ))} </div > : (\n            <h2>Your list is empty</h2>\n        )\n\n    );\n\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        todolist: state.todolist,\n        loading: state.loading,\n        error: state.error\n    };\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchTodolist: () => dispatch(fetchTodolist())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n"]},"metadata":{},"sourceType":"module"}